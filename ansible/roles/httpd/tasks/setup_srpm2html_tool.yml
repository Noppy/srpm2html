---
# file: /roles/httpd/tasks/setup_srpm2html_tool.yml 
# This playbook setup srpm2html shell scripts

- name: install required packages for srpm2html(dnf)
  dnf:
    name:  "{{ item }}"
    state: "latest"
  notify:  "restart httpd"
  when:    "ansible_pkg_mgr == 'dnf'"
  with_items:
    - gcc
    - gcc10
    - make
    - ncurses-devel
    - flex
    - bison
    - rpm-build
    - squashfs-tools

- name: install required packages for srpm2html(yum)
  yum:
    name:  "{{ item }}"
    state: "latest"
  notify:  "restart httpd"
  when:    "ansible_pkg_mgr == 'yum'"
  with_items:
    - gcc 
    - gcc10
    - make
    - ncurses-devel
    - flex
    - bison
    - rpm-build
    - squashfs-tools

- name: check exist Gnu Global
  stat:
    path: "{{ check_global_file_path }}"
  register: exists_global_file

- name: install Gnu Global
  include: install_gnu_global.yml
  when: not exists_global_file.stat.exists

- name: create additional temprary directory for srpm2kernel
  file:
    path:  "{{ item }}"
    state: directory
    owner: apache
    group: apache
    mode:  0775
    seuser: "system_u"
    setype: "httpd_sys_content_t"
  with_items:
    - "{{ rpmbuild_dir }}"
    - "{{ squashfs_dir }}"
    - "{{ source_dir }}"

- name: set shell 
  get_url:
    url:   "{{ item.url }}"
    dest:  "{{ bin_dir }}"
    owner: "root"
    group: "root"
    mode:  0775
    seuser: "system_u"
    setype: "httpd_sys_content_t"
  with_items: '{{srpm2html_shells}}'

- name: add apache group at ec2-user( Only Amazon Linux )
  user:
    name:   ec2-user
    groups:  apache
    append: yes
  when: "ansible_distribution == 'Amazon'"

- name: check exist {{ ebs_dev_name }}
  stat:
    path: "{{ ebs_dev_name }}"
  register: ebs_dev 

- name: check exist {{ partition_dev_name }}
  stat:
    path: "{{ partition_dev_name }}"
  register: part_dev

- name: make partition label {{ ebs_dev_name }}
  command: "parted --script --align optimal {{ ebs_dev_name }} -- mklabel gpt"
  when: ebs_dev.stat.exists and not part_dev.stat.exists

- name: make partition {{ ebs_dev_name }}
  command: "parted --script --align optimal {{ ebs_dev_name }} -- mkpart primary ext4 1MiB -1"
  when: ebs_dev.stat.exists and not part_dev.stat.exists

- name: check exist {{ partition_dev_name }}
  stat:
    path: "{{ partition_dev_name }}"
  register: part_dev

- name: format filesystem( only aws )
  filesystem:
    fstype: ext4
    dev:  "{{ partition_dev_name }}"
    opts: -L rpmbuild -i 4096
  when: part_dev.stat.exists

- name: add rpmbuild label filesystem at fstab
  mount:
    name:   "{{ rpmbuild_dir }}"
    src:    "LABEL=rpmbuild"
    fstype: ext4
    opts:   defaults,noatime
    passno: 2
    state:  mounted
  when: part_dev.stat.exists

- name: change parmission and owner rpmbuild
  file:
    path:  "{{ item }}"
    state: directory
    owner: apache
    group: apache
    mode:  0775
    seuser: "system_u"
    setype: "httpd_sys_content_t"
  when: part_dev.stat.exists
  with_items:
    - "{{ rpmbuild_dir }}"
